#!/usr/bin/env bash

install_riak() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d)
  else
    local tmp_download_dir=$TMPDIR
  fi

  local source_path=$(get_download_file_path $install_type $version $tmp_download_dir)
  download_source $install_type $version $source_path

  # running this in a subshell
  # because we don't want to disturb current working dir
  (
    cd $(dirname $source_path)
    tar zxf $source_path || exit 1
    cd $(untar_path $install_type $version $tmp_download_dir)

    # we unset it here because echo-ing changes the return value of the function
    unset ASDF_PKG_MISSING

    echo "erlang 17.5" > .tool-versions
    asdf install
    make all rel || exit 1
    cd rel || exit 1
    mv riak/* $ASDF_INSTALL_PATH || exit 1
  )
}


untar_path() {
  local install_type=$1
  local version=$2
  local tmp_download_dir=$3

  if [ "$install_type" = "version" ]
  then
    echo "$tmp_download_dir/riak-${version}"
  else
    echo "$tmp_download_dir/riak-${version}"
  fi
}


download_source() {
  local install_type=$1
  local version=$2
  local download_path=$3
  local download_url=$(get_download_url $install_type $version)

  curl -sLo $download_path -C - $download_url
}


get_download_file_path() {
  local install_type=$1
  local version=$2
  local tmp_download_dir=$3
  local pkg_name="riak-${version}.tar.gz"

  echo "$tmp_download_dir/$pkg_name"
}


get_download_url() {
  local install_type=$1
  local version=$2
  local version_major=${version%.*}
  echo "http://s3.amazonaws.com/downloads.basho.com/riak/$version_major/$version/riak-$version.tar.gz"
}

install_riak $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
